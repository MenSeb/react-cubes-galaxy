.Cube
{
  $size: var( --size-size );
  $half: calc( #{ $size } / 2 );
  $-half: calc( -1 * #{ $half } );

  $color: var( --cube-color );

  $colorBackground: var( --color-background );
  $colorBorder: var( --color-border );
  $colorShadow: var( --color-shadow );

  // $sizeBorder: calc( #{ $size } * #{ $ratioBorder } );
  // $sizeShadow: calc( #{ $size } * #{ $ratioShadow } );

  // $shadow: 0 0 $sizeShadow 0 $colorShadow inset;

  @extend %flex-center, %scene-element;

  > *
  {
    @extend %pseudo-elements;

    &,
    &::before,
    &::after
    {
      @extend %scene-element, %flex-center;

      @include size( $size );

      background-color: $colorBackground;
    }

    &:first-child
    {
      & { transform: rotate3d( 0, 1, 0, 0deg ) translate3d( 0, 0, $half ) }
      &::before { transform: rotate3d( 0, 1, 0, 90deg ) translate3d( $half, 0, $half ) }
      &::after { transform: rotate3d( 0, 1, 0, -90deg ) translate3d( $-half, 0, $half ) }
    }

    &:last-child
    {
      & { transform: rotate3d( 0, 1, 0, 180deg ) translate3d( 0, 0, $half ) }
      &::before { transform: rotate3d( 1, 0, 0, 90deg ) translate3d( 0, $-half, $half ) }
      &::after { transform: rotate3d( 1, 0, 0, -90deg ) translate3d( 0, $half, $half ) }
    }
  }
}